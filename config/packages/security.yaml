security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check # or api_login_check as defined in config/routes.yaml
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        # api:
        #     pattern:   ^/api
        #     stateless: true
        #     guard:
        #         authenticators:
        #             - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
              

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/projets, roles: ROLE_VIEWER }
         - { path: ^/taches, roles: ROLE_VIEWER }
         - { path: ^/lieux, roles: ROLE_VIEWER }
         - { path: ^/materiel, roles: ROLE_OWNER }
         - { path: ^/contacts, roles: ROLE_VIEWER }
         - { path: ^/document, roles: ROLE_VIEWER }
    #    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
    #    - { path: ^/apip, roles: ROLE_EDITOR }
    #    - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_EDITOR
        ROLE_EDITOR: ROLE_OWNER
        ROLE_OWNER: ROLE_VIEWER
        ROLE_VIEWER: ROLE_USER